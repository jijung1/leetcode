*Problem Description

Given a linked list, swap every two adjacent nodes and return its head.

You may not modify the values in the list's nodes, only nodes itself may be changed.

 

Example:

Given 1->2->3->4, you should return the list as 2->1->4->3.

*Solution



```

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        ListNode* curr = head;
        while(curr != NULL) {
            if(curr->next == NULL)
            {
                break;
            }
            int temp = curr->val;
            curr->val = curr->next->val;
            curr->next->val = temp;
            curr = curr->next->next;
        }

        return head;
    }
};

```
